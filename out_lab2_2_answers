
Q1: (cin only) What happens when you run the code above? Explain why
Answer Q1: When ran, as soon as I input 4.5 when I'm supposed to, the whole program skips ahead to the end. This is because the leftover .5 of 4.5 gets carried over to the next inputs and continues the loop without input from the user.  

Q2: (cin + fail+ignore) What happens when you run the code above? Explain why.
Answer Q2: The same thing as the first code, but this time it allows the user to input for 'abc' and 'a'. This code was created to ignore the leftovers which is why The user is allowed to input for all of them. 

Q3: Is the problem of reading an integer value solved? Explain your reasoning.
Answer Q3: It's not solve, it's just ignored. It turns the .5 from 4.5 into a string variable.

Q4: (getline only) What happens when you run the code above? Explain why.
Answer Q4: The loop runs until the user inputs 'abc' which terminates the loop. This is because 'abc' cannot be converted into an integer.

Q5: (getline+stoi) What happens when you run the code above? Explain why.
Answer Q5: It runs like the last one, but this time the termination doesn't happen. This is because the try catch function ignores the invalid argument.

Q6: Explain your method to validate integer values entered
Answer Q6:  The first part analyzes whether the input was a string value. If it is not a string value then it checks to see if the input was a float. If it was a float then it outputs incorrect while ignoring and erasing the extra decimal point. Otherwise it outputs correct. 
